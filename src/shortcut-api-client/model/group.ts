/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Icon } from './icon';

/**
* A Group.
*/
export class Group {
    /**
    * The Shortcut application url for the Group.
    */
    'appUrl': string;
    /**
    * The description of the Group.
    */
    'description': string;
    /**
    * Whether or not the Group is archived.
    */
    'archived': boolean;
    /**
    * A string description of this resource.
    */
    'entityType': string;
    /**
    * The hex color to be displayed with the Group (for example, \"#ff0000\").
    */
    'color': string | null;
    /**
    * The number of stories assigned to the group which are in a started workflow state.
    */
    'numStoriesStarted': number;
    /**
    * The mention name of the Group.
    */
    'mentionName': string;
    /**
    * The name of the Group.
    */
    'name': string;
    'globalId': string;
    /**
    * The color key to be displayed with the Group.
    */
    'colorKey': Group.ColorKeyEnum;
    /**
    * The total number of stories assigned to the group.
    */
    'numStories': number;
    /**
    * The number of epics assigned to the group which are in the started workflow state.
    */
    'numEpicsStarted': number;
    /**
    * The number of stories assigned to the group which are in a backlog workflow state.
    */
    'numStoriesBacklog': number;
    /**
    * The id of the Group.
    */
    'id': string;
    'displayIcon': Icon;
    /**
    * The Member IDs contain within the Group.
    */
    'memberIds': Array<string>;
    /**
    * The Workflow IDs contained within the Group.
    */
    'workflowIds': Array<number>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "appUrl",
            "baseName": "app_url",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "archived",
            "baseName": "archived",
            "type": "boolean"
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string"
        },
        {
            "name": "color",
            "baseName": "color",
            "type": "string"
        },
        {
            "name": "numStoriesStarted",
            "baseName": "num_stories_started",
            "type": "number"
        },
        {
            "name": "mentionName",
            "baseName": "mention_name",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "globalId",
            "baseName": "global_id",
            "type": "string"
        },
        {
            "name": "colorKey",
            "baseName": "color_key",
            "type": "Group.ColorKeyEnum"
        },
        {
            "name": "numStories",
            "baseName": "num_stories",
            "type": "number"
        },
        {
            "name": "numEpicsStarted",
            "baseName": "num_epics_started",
            "type": "number"
        },
        {
            "name": "numStoriesBacklog",
            "baseName": "num_stories_backlog",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "displayIcon",
            "baseName": "display_icon",
            "type": "Icon"
        },
        {
            "name": "memberIds",
            "baseName": "member_ids",
            "type": "Array<string>"
        },
        {
            "name": "workflowIds",
            "baseName": "workflow_ids",
            "type": "Array<number>"
        }    ];

    static getAttributeTypeMap() {
        return Group.attributeTypeMap;
    }
}

export namespace Group {
    export enum ColorKeyEnum {
        Blue = <any> 'blue',
        Purple = <any> 'purple',
        MidnightBlue = <any> 'midnight-blue',
        Orange = <any> 'orange',
        YellowGreen = <any> 'yellow-green',
        Brass = <any> 'brass',
        Gray = <any> 'gray',
        Fuchsia = <any> 'fuchsia',
        Yellow = <any> 'yellow',
        Pink = <any> 'pink',
        SkyBlue = <any> 'sky-blue',
        Green = <any> 'green',
        Red = <any> 'red',
        Black = <any> 'black',
        Slate = <any> 'slate',
        Turquoise = <any> 'turquoise'
    }
}
