/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { StoryHistoryChangeAddsRemovesInt } from './storyHistoryChangeAddsRemovesInt';
import { StoryHistoryChangeAddsRemovesUuid } from './storyHistoryChangeAddsRemovesUuid';
import { StoryHistoryChangeOldNewBool } from './storyHistoryChangeOldNewBool';
import { StoryHistoryChangeOldNewInt } from './storyHistoryChangeOldNewInt';
import { StoryHistoryChangeOldNewStr } from './storyHistoryChangeOldNewStr';
import { StoryHistoryChangeOldNewUuid } from './storyHistoryChangeOldNewUuid';

/**
* The changes that have occurred as a result of the action.
*/
export class HistoryChangesStory {
    'description'?: StoryHistoryChangeOldNewStr;
    'archived'?: StoryHistoryChangeOldNewBool;
    'started'?: StoryHistoryChangeOldNewBool;
    'taskIds'?: StoryHistoryChangeAddsRemovesInt;
    'mentionIds'?: StoryHistoryChangeAddsRemovesUuid;
    'storyType'?: StoryHistoryChangeOldNewStr;
    'name'?: StoryHistoryChangeOldNewStr;
    'completed'?: StoryHistoryChangeOldNewBool;
    'blocker'?: StoryHistoryChangeOldNewBool;
    'epicId'?: StoryHistoryChangeOldNewInt;
    'branchIds'?: StoryHistoryChangeAddsRemovesInt;
    'commitIds'?: StoryHistoryChangeAddsRemovesInt;
    'requestedById'?: StoryHistoryChangeOldNewUuid;
    'iterationId'?: StoryHistoryChangeOldNewInt;
    'labelIds'?: StoryHistoryChangeAddsRemovesInt;
    'groupId'?: StoryHistoryChangeOldNewUuid;
    'workflowStateId'?: StoryHistoryChangeOldNewInt;
    'objectStoryLinkIds'?: StoryHistoryChangeAddsRemovesInt;
    'followerIds'?: StoryHistoryChangeAddsRemovesUuid;
    'ownerIds'?: StoryHistoryChangeAddsRemovesUuid;
    'customFieldValueIds'?: StoryHistoryChangeAddsRemovesUuid;
    'estimate'?: StoryHistoryChangeOldNewInt;
    'subjectStoryLinkIds'?: StoryHistoryChangeAddsRemovesInt;
    'blocked'?: StoryHistoryChangeOldNewBool;
    'projectId'?: StoryHistoryChangeOldNewInt;
    'deadline'?: StoryHistoryChangeOldNewStr;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "StoryHistoryChangeOldNewStr"
        },
        {
            "name": "archived",
            "baseName": "archived",
            "type": "StoryHistoryChangeOldNewBool"
        },
        {
            "name": "started",
            "baseName": "started",
            "type": "StoryHistoryChangeOldNewBool"
        },
        {
            "name": "taskIds",
            "baseName": "task_ids",
            "type": "StoryHistoryChangeAddsRemovesInt"
        },
        {
            "name": "mentionIds",
            "baseName": "mention_ids",
            "type": "StoryHistoryChangeAddsRemovesUuid"
        },
        {
            "name": "storyType",
            "baseName": "story_type",
            "type": "StoryHistoryChangeOldNewStr"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "StoryHistoryChangeOldNewStr"
        },
        {
            "name": "completed",
            "baseName": "completed",
            "type": "StoryHistoryChangeOldNewBool"
        },
        {
            "name": "blocker",
            "baseName": "blocker",
            "type": "StoryHistoryChangeOldNewBool"
        },
        {
            "name": "epicId",
            "baseName": "epic_id",
            "type": "StoryHistoryChangeOldNewInt"
        },
        {
            "name": "branchIds",
            "baseName": "branch_ids",
            "type": "StoryHistoryChangeAddsRemovesInt"
        },
        {
            "name": "commitIds",
            "baseName": "commit_ids",
            "type": "StoryHistoryChangeAddsRemovesInt"
        },
        {
            "name": "requestedById",
            "baseName": "requested_by_id",
            "type": "StoryHistoryChangeOldNewUuid"
        },
        {
            "name": "iterationId",
            "baseName": "iteration_id",
            "type": "StoryHistoryChangeOldNewInt"
        },
        {
            "name": "labelIds",
            "baseName": "label_ids",
            "type": "StoryHistoryChangeAddsRemovesInt"
        },
        {
            "name": "groupId",
            "baseName": "group_id",
            "type": "StoryHistoryChangeOldNewUuid"
        },
        {
            "name": "workflowStateId",
            "baseName": "workflow_state_id",
            "type": "StoryHistoryChangeOldNewInt"
        },
        {
            "name": "objectStoryLinkIds",
            "baseName": "object_story_link_ids",
            "type": "StoryHistoryChangeAddsRemovesInt"
        },
        {
            "name": "followerIds",
            "baseName": "follower_ids",
            "type": "StoryHistoryChangeAddsRemovesUuid"
        },
        {
            "name": "ownerIds",
            "baseName": "owner_ids",
            "type": "StoryHistoryChangeAddsRemovesUuid"
        },
        {
            "name": "customFieldValueIds",
            "baseName": "custom_field_value_ids",
            "type": "StoryHistoryChangeAddsRemovesUuid"
        },
        {
            "name": "estimate",
            "baseName": "estimate",
            "type": "StoryHistoryChangeOldNewInt"
        },
        {
            "name": "subjectStoryLinkIds",
            "baseName": "subject_story_link_ids",
            "type": "StoryHistoryChangeAddsRemovesInt"
        },
        {
            "name": "blocked",
            "baseName": "blocked",
            "type": "StoryHistoryChangeOldNewBool"
        },
        {
            "name": "projectId",
            "baseName": "project_id",
            "type": "StoryHistoryChangeOldNewInt"
        },
        {
            "name": "deadline",
            "baseName": "deadline",
            "type": "StoryHistoryChangeOldNewStr"
        }    ];

    static getAttributeTypeMap() {
        return HistoryChangesStory.attributeTypeMap;
    }
}

