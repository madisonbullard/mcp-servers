/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Icon } from './icon';

/**
* A group of Member profile details.
*/
export class Profile {
    /**
    * A string description of this resource.
    */
    'entityType': string;
    /**
    * A true/false boolean indicating whether the Member has been deactivated within Shortcut.
    */
    'deactivated': boolean;
    /**
    * If Two Factor Authentication is activated for this User.
    */
    'twoFactorAuthActivated'?: boolean;
    /**
    * The Member\'s username within the Organization.
    */
    'mentionName': string;
    /**
    * The Member\'s name within the Organization.
    */
    'name': string | null;
    /**
    * This is the gravatar hash associated with email_address.
    */
    'gravatarHash': string | null;
    /**
    * The unique identifier of the profile.
    */
    'id': string;
    'displayIcon': Icon;
    /**
    * A boolean indicating whether this profile is an owner at their associated organization.
    */
    'isOwner': boolean;
    /**
    * The primary email address of the Member with the Organization.
    */
    'emailAddress': string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string"
        },
        {
            "name": "deactivated",
            "baseName": "deactivated",
            "type": "boolean"
        },
        {
            "name": "twoFactorAuthActivated",
            "baseName": "two_factor_auth_activated",
            "type": "boolean"
        },
        {
            "name": "mentionName",
            "baseName": "mention_name",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "gravatarHash",
            "baseName": "gravatar_hash",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "displayIcon",
            "baseName": "display_icon",
            "type": "Icon"
        },
        {
            "name": "isOwner",
            "baseName": "is_owner",
            "type": "boolean"
        },
        {
            "name": "emailAddress",
            "baseName": "email_address",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Profile.attributeTypeMap;
    }
}

