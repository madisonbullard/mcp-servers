/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CustomFieldValueParams } from './customFieldValueParams';
import { LabelSlim } from './labelSlim';
import { LinkedFile } from './linkedFile';
import { StoryContentsTask } from './storyContentsTask';
import { UploadedFile } from './uploadedFile';

/**
* A container entity for the attributes this template should populate.
*/
export class StoryContents {
    /**
    * The description of the story.
    */
    'description'?: string;
    /**
    * A string description of this resource.
    */
    'entityType'?: string;
    /**
    * An array of labels attached to the story.
    */
    'labels'?: Array<LabelSlim>;
    /**
    * The type of story (feature, bug, chore).
    */
    'storyType'?: string;
    /**
    * An array of maps specifying a CustomField ID and CustomFieldEnumValue ID that represents an assertion of some value for a CustomField.
    */
    'customFields'?: Array<CustomFieldValueParams>;
    /**
    * An array of linked files attached to the story.
    */
    'linkedFiles'?: Array<LinkedFile>;
    /**
    * The name of the story.
    */
    'name'?: string;
    /**
    * The ID of the epic the story belongs to.
    */
    'epicId'?: number;
    /**
    * An array of external links connected to the story.
    */
    'externalLinks'?: Array<string>;
    /**
    * The ID of the iteration the story belongs to.
    */
    'iterationId'?: number;
    /**
    * An array of tasks connected to the story.
    */
    'tasks'?: Array<StoryContentsTask>;
    /**
    * An array of label ids attached to the story.
    */
    'labelIds'?: Array<number>;
    /**
    * The ID of the group to which the story is assigned.
    */
    'groupId'?: string;
    /**
    * The ID of the workflow state the story is currently in.
    */
    'workflowStateId'?: number;
    /**
    * An array of UUIDs for any Members listed as Followers.
    */
    'followerIds'?: Array<string>;
    /**
    * An array of UUIDs of the owners of this story.
    */
    'ownerIds'?: Array<string>;
    /**
    * The numeric point estimate of the story. Can also be null, which means unestimated.
    */
    'estimate'?: number;
    /**
    * An array of files attached to the story.
    */
    'files'?: Array<UploadedFile>;
    /**
    * The ID of the project the story belongs to.
    */
    'projectId'?: number;
    /**
    * The due date of the story.
    */
    'deadline'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string"
        },
        {
            "name": "labels",
            "baseName": "labels",
            "type": "Array<LabelSlim>"
        },
        {
            "name": "storyType",
            "baseName": "story_type",
            "type": "string"
        },
        {
            "name": "customFields",
            "baseName": "custom_fields",
            "type": "Array<CustomFieldValueParams>"
        },
        {
            "name": "linkedFiles",
            "baseName": "linked_files",
            "type": "Array<LinkedFile>"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "epicId",
            "baseName": "epic_id",
            "type": "number"
        },
        {
            "name": "externalLinks",
            "baseName": "external_links",
            "type": "Array<string>"
        },
        {
            "name": "iterationId",
            "baseName": "iteration_id",
            "type": "number"
        },
        {
            "name": "tasks",
            "baseName": "tasks",
            "type": "Array<StoryContentsTask>"
        },
        {
            "name": "labelIds",
            "baseName": "label_ids",
            "type": "Array<number>"
        },
        {
            "name": "groupId",
            "baseName": "group_id",
            "type": "string"
        },
        {
            "name": "workflowStateId",
            "baseName": "workflow_state_id",
            "type": "number"
        },
        {
            "name": "followerIds",
            "baseName": "follower_ids",
            "type": "Array<string>"
        },
        {
            "name": "ownerIds",
            "baseName": "owner_ids",
            "type": "Array<string>"
        },
        {
            "name": "estimate",
            "baseName": "estimate",
            "type": "number"
        },
        {
            "name": "files",
            "baseName": "files",
            "type": "Array<UploadedFile>"
        },
        {
            "name": "projectId",
            "baseName": "project_id",
            "type": "number"
        },
        {
            "name": "deadline",
            "baseName": "deadline",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return StoryContents.attributeTypeMap;
    }
}

