/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CreateLabelParams } from './createLabelParams';
import { CustomFieldValueParams } from './customFieldValueParams';

export class UpdateStories {
    /**
    * If the Stories should be archived or not.
    */
    'archived'?: boolean;
    /**
    * The Ids of the Stories you wish to update.
    */
    'storyIds': Set<number>;
    /**
    * The type of story (feature, bug, chore).
    */
    'storyType'?: UpdateStories.StoryTypeEnum;
    /**
    * One of \"first\" or \"last\". This can be used to move the given story to the first or last position in the workflow state.
    */
    'moveTo'?: UpdateStories.MoveToEnum;
    /**
    * The UUIDs of the new followers to be added.
    */
    'followerIdsAdd'?: Set<string>;
    /**
    * The ID of the epic the story belongs to.
    */
    'epicId'?: number | null;
    /**
    * An array of External Links associated with this story.
    */
    'externalLinks'?: Array<string>;
    /**
    * The UUIDs of the followers to be removed.
    */
    'followerIdsRemove'?: Set<string>;
    /**
    * The ID of the member that requested the story.
    */
    'requestedById'?: string;
    /**
    * The ID of the iteration the story belongs to.
    */
    'iterationId'?: number | null;
    /**
    * A map specifying a CustomField ID and CustomFieldEnumValue ID that represents an assertion of some value for a CustomField.
    */
    'customFieldsRemove'?: Array<CustomFieldValueParams>;
    /**
    * An array of labels to be added.
    */
    'labelsAdd'?: Array<CreateLabelParams>;
    /**
    * The Id of the Group the Stories should belong to.
    */
    'groupId'?: string | null;
    /**
    * The ID of the workflow state to put the stories in.
    */
    'workflowStateId'?: number;
    /**
    * The ID of the story that the stories are to be moved before.
    */
    'beforeId'?: number;
    /**
    * The numeric point estimate of the story. Can also be null, which means unestimated.
    */
    'estimate'?: number | null;
    /**
    * The ID of the story that the stories are to be moved below.
    */
    'afterId'?: number;
    /**
    * The UUIDs of the owners to be removed.
    */
    'ownerIdsRemove'?: Set<string>;
    /**
    * A map specifying a CustomField ID and CustomFieldEnumValue ID that represents an assertion of some value for a CustomField.
    */
    'customFieldsAdd'?: Array<CustomFieldValueParams>;
    /**
    * The ID of the Project the Stories should belong to.
    */
    'projectId'?: number | null;
    /**
    * An array of labels to be removed.
    */
    'labelsRemove'?: Array<CreateLabelParams>;
    /**
    * The due date of the story.
    */
    'deadline'?: Date | null;
    /**
    * The UUIDs of the new owners to be added.
    */
    'ownerIdsAdd'?: Set<string>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "archived",
            "baseName": "archived",
            "type": "boolean"
        },
        {
            "name": "storyIds",
            "baseName": "story_ids",
            "type": "Set<number>"
        },
        {
            "name": "storyType",
            "baseName": "story_type",
            "type": "UpdateStories.StoryTypeEnum"
        },
        {
            "name": "moveTo",
            "baseName": "move_to",
            "type": "UpdateStories.MoveToEnum"
        },
        {
            "name": "followerIdsAdd",
            "baseName": "follower_ids_add",
            "type": "Set<string>"
        },
        {
            "name": "epicId",
            "baseName": "epic_id",
            "type": "number"
        },
        {
            "name": "externalLinks",
            "baseName": "external_links",
            "type": "Array<string>"
        },
        {
            "name": "followerIdsRemove",
            "baseName": "follower_ids_remove",
            "type": "Set<string>"
        },
        {
            "name": "requestedById",
            "baseName": "requested_by_id",
            "type": "string"
        },
        {
            "name": "iterationId",
            "baseName": "iteration_id",
            "type": "number"
        },
        {
            "name": "customFieldsRemove",
            "baseName": "custom_fields_remove",
            "type": "Array<CustomFieldValueParams>"
        },
        {
            "name": "labelsAdd",
            "baseName": "labels_add",
            "type": "Array<CreateLabelParams>"
        },
        {
            "name": "groupId",
            "baseName": "group_id",
            "type": "string"
        },
        {
            "name": "workflowStateId",
            "baseName": "workflow_state_id",
            "type": "number"
        },
        {
            "name": "beforeId",
            "baseName": "before_id",
            "type": "number"
        },
        {
            "name": "estimate",
            "baseName": "estimate",
            "type": "number"
        },
        {
            "name": "afterId",
            "baseName": "after_id",
            "type": "number"
        },
        {
            "name": "ownerIdsRemove",
            "baseName": "owner_ids_remove",
            "type": "Set<string>"
        },
        {
            "name": "customFieldsAdd",
            "baseName": "custom_fields_add",
            "type": "Array<CustomFieldValueParams>"
        },
        {
            "name": "projectId",
            "baseName": "project_id",
            "type": "number"
        },
        {
            "name": "labelsRemove",
            "baseName": "labels_remove",
            "type": "Array<CreateLabelParams>"
        },
        {
            "name": "deadline",
            "baseName": "deadline",
            "type": "Date"
        },
        {
            "name": "ownerIdsAdd",
            "baseName": "owner_ids_add",
            "type": "Set<string>"
        }    ];

    static getAttributeTypeMap() {
        return UpdateStories.attributeTypeMap;
    }
}

export namespace UpdateStories {
    export enum StoryTypeEnum {
        Feature = <any> 'feature',
        Chore = <any> 'chore',
        Bug = <any> 'bug'
    }
    export enum MoveToEnum {
        Last = <any> 'last',
        First = <any> 'first'
    }
}
