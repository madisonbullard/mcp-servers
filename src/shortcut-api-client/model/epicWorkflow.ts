/**
 * Shortcut API
 * Shortcut API
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { EpicState } from './epicState';

/**
* Epic Workflow is the array of defined Epic States. Epic Workflow can be queried using the API but must be updated in the Shortcut UI. 
*/
export class EpicWorkflow {
    /**
    * A string description of this resource.
    */
    'entityType': string;
    /**
    * The unique ID of the Epic Workflow.
    */
    'id': number;
    /**
    * The date the Epic Workflow was created.
    */
    'createdAt': Date;
    /**
    * The date the Epic Workflow was updated.
    */
    'updatedAt': Date;
    /**
    * The unique ID of the default Epic State that new Epics are assigned by default.
    */
    'defaultEpicStateId': number;
    /**
    * A map of the Epic States in this Epic Workflow.
    */
    'epicStates': Array<EpicState>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "defaultEpicStateId",
            "baseName": "default_epic_state_id",
            "type": "number"
        },
        {
            "name": "epicStates",
            "baseName": "epic_states",
            "type": "Array<EpicState>"
        }    ];

    static getAttributeTypeMap() {
        return EpicWorkflow.attributeTypeMap;
    }
}

