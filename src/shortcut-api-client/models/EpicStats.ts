/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* A group of calculated values for this Epic.
*/
export class EpicStats {
    /**
    * The total number of completed points in this Epic.
    */
    'numPointsDone': number;
    /**
    * The total number of documents associated with this Epic.
    */
    'numRelatedDocuments': number;
    /**
    * The average cycle time (in seconds) of completed stories in this Epic.
    */
    'averageCycleTime'?: number;
    /**
    * The total number of unstarted Stories in this Epic.
    */
    'numStoriesUnstarted': number;
    /**
    * The total number of Stories in this Epic.
    */
    'numStoriesTotal': number;
    /**
    * The date of the last update of a Story in this Epic.
    */
    'lastStoryUpdate': Date | null;
    /**
    * The total number of started points in this Epic.
    */
    'numPointsStarted': number;
    /**
    * The total number of unstarted points in this Epic.
    */
    'numPointsUnstarted': number;
    /**
    * The total number of started Stories in this Epic.
    */
    'numStoriesStarted': number;
    /**
    * The total number of Stories with no point estimate.
    */
    'numStoriesUnestimated': number;
    /**
    * The total number of backlog Stories in this Epic.
    */
    'numStoriesBacklog': number;
    /**
    * The average lead time (in seconds) of completed stories in this Epic.
    */
    'averageLeadTime'?: number;
    /**
    * The total number of backlog points in this Epic.
    */
    'numPointsBacklog': number;
    /**
    * The total number of points in this Epic.
    */
    'numPoints': number;
    /**
    * The total number of done Stories in this Epic.
    */
    'numStoriesDone': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "numPointsDone",
            "baseName": "num_points_done",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numRelatedDocuments",
            "baseName": "num_related_documents",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "averageCycleTime",
            "baseName": "average_cycle_time",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numStoriesUnstarted",
            "baseName": "num_stories_unstarted",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numStoriesTotal",
            "baseName": "num_stories_total",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "lastStoryUpdate",
            "baseName": "last_story_update",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "numPointsStarted",
            "baseName": "num_points_started",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numPointsUnstarted",
            "baseName": "num_points_unstarted",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numStoriesStarted",
            "baseName": "num_stories_started",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numStoriesUnestimated",
            "baseName": "num_stories_unestimated",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numStoriesBacklog",
            "baseName": "num_stories_backlog",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "averageLeadTime",
            "baseName": "average_lead_time",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numPointsBacklog",
            "baseName": "num_points_backlog",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numPoints",
            "baseName": "num_points",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numStoriesDone",
            "baseName": "num_stories_done",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return EpicStats.attributeTypeMap;
    }

    public constructor() {
    }
}
