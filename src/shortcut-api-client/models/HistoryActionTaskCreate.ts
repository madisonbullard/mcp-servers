/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* An action representing a Task being created.
*/
export class HistoryActionTaskCreate {
    /**
    * The description of the Task.
    */
    'description': string;
    /**
    * The type of entity referenced.
    */
    'entityType': string;
    /**
    * An array of Member IDs that represent who has been mentioned in the Task.
    */
    'mentionIds'?: Array<string>;
    /**
    * An array of Groups IDs that represent which have been mentioned in the Task.
    */
    'groupMentionIds'?: Array<string>;
    /**
    * An array of Member IDs that represent the Task\'s owners.
    */
    'ownerIds'?: Array<string>;
    /**
    * The ID of the entity referenced.
    */
    'id': number;
    /**
    * The action of the entity referenced.
    */
    'action': HistoryActionTaskCreateActionEnum;
    /**
    * Whether or not the Task is complete.
    */
    'complete': boolean;
    /**
    * A timestamp that represent\'s the Task\'s deadline.
    */
    'deadline'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "mentionIds",
            "baseName": "mention_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "groupMentionIds",
            "baseName": "group_mention_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "ownerIds",
            "baseName": "owner_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "action",
            "baseName": "action",
            "type": "HistoryActionTaskCreateActionEnum",
            "format": ""
        },
        {
            "name": "complete",
            "baseName": "complete",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "deadline",
            "baseName": "deadline",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return HistoryActionTaskCreate.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum HistoryActionTaskCreateActionEnum {
    Create = 'create'
}

