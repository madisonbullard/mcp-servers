/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Linked files are stored on a third-party website and linked to one or more Stories. Shortcut currently supports linking files from Google Drive, Dropbox, Box, and by URL.
*/
export class LinkedFile {
    /**
    * The description of the file.
    */
    'description': string | null;
    /**
    * A string description of this resource.
    */
    'entityType': string;
    /**
    * The IDs of the stories this file is attached to.
    */
    'storyIds': Array<number>;
    /**
    * `Deprecated:` use `member_mention_ids`.
    */
    'mentionIds': Array<string>;
    /**
    * The members that are mentioned in the description of the file.
    */
    'memberMentionIds': Array<string>;
    /**
    * The name of the linked file.
    */
    'name': string;
    /**
    * The URL of the file thumbnail, if the integration provided it.
    */
    'thumbnailUrl': string | null;
    /**
    * The integration type (e.g. google, dropbox, box).
    */
    'type': string;
    /**
    * The filesize, if the integration provided it.
    */
    'size': number | null;
    /**
    * The UUID of the member that uploaded the file.
    */
    'uploaderId': string;
    /**
    * The content type of the image (e.g. txt/plain).
    */
    'contentType': string | null;
    /**
    * The time/date the LinkedFile was updated.
    */
    'updatedAt': Date;
    /**
    * The groups that are mentioned in the description of the file.
    */
    'groupMentionIds': Array<string>;
    /**
    * The unique identifier for the file.
    */
    'id': number;
    /**
    * The URL of the file.
    */
    'url': string;
    /**
    * The time/date the LinkedFile was created.
    */
    'createdAt': Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "storyIds",
            "baseName": "story_ids",
            "type": "Array<number>",
            "format": "int64"
        },
        {
            "name": "mentionIds",
            "baseName": "mention_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "memberMentionIds",
            "baseName": "member_mention_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "thumbnailUrl",
            "baseName": "thumbnail_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "uploaderId",
            "baseName": "uploader_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "contentType",
            "baseName": "content_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "groupMentionIds",
            "baseName": "group_mention_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return LinkedFile.attributeTypeMap;
    }

    public constructor() {
    }
}
