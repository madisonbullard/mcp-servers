/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Icon } from '../models/Icon';
import { HttpFile } from '../http/http';

/**
* A Group.
*/
export class Group {
    /**
    * The Shortcut application url for the Group.
    */
    'appUrl': string;
    /**
    * The description of the Group.
    */
    'description': string;
    /**
    * Whether or not the Group is archived.
    */
    'archived': boolean;
    /**
    * A string description of this resource.
    */
    'entityType': string;
    /**
    * The hex color to be displayed with the Group (for example, \"#ff0000\").
    */
    'color': string | null;
    /**
    * The number of stories assigned to the group which are in a started workflow state.
    */
    'numStoriesStarted': number;
    /**
    * The mention name of the Group.
    */
    'mentionName': string;
    /**
    * The name of the Group.
    */
    'name': string;
    'globalId': string;
    /**
    * The color key to be displayed with the Group.
    */
    'colorKey': GroupColorKeyEnum | null;
    /**
    * The total number of stories assigned to the group.
    */
    'numStories': number;
    /**
    * The number of epics assigned to the group which are in the started workflow state.
    */
    'numEpicsStarted': number;
    /**
    * The number of stories assigned to the group which are in a backlog workflow state.
    */
    'numStoriesBacklog': number;
    /**
    * The id of the Group.
    */
    'id': string;
    'displayIcon': Icon;
    /**
    * The Member IDs contain within the Group.
    */
    'memberIds': Array<string>;
    /**
    * The Workflow IDs contained within the Group.
    */
    'workflowIds': Array<number>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "appUrl",
            "baseName": "app_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "archived",
            "baseName": "archived",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "color",
            "baseName": "color",
            "type": "string",
            "format": "css-color"
        },
        {
            "name": "numStoriesStarted",
            "baseName": "num_stories_started",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "mentionName",
            "baseName": "mention_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "globalId",
            "baseName": "global_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "colorKey",
            "baseName": "color_key",
            "type": "GroupColorKeyEnum",
            "format": ""
        },
        {
            "name": "numStories",
            "baseName": "num_stories",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numEpicsStarted",
            "baseName": "num_epics_started",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "numStoriesBacklog",
            "baseName": "num_stories_backlog",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "displayIcon",
            "baseName": "display_icon",
            "type": "Icon",
            "format": ""
        },
        {
            "name": "memberIds",
            "baseName": "member_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "workflowIds",
            "baseName": "workflow_ids",
            "type": "Array<number>",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return Group.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum GroupColorKeyEnum {
    Blue = 'blue',
    Purple = 'purple',
    MidnightBlue = 'midnight-blue',
    Orange = 'orange',
    YellowGreen = 'yellow-green',
    Brass = 'brass',
    Gray = 'gray',
    Fuchsia = 'fuchsia',
    Yellow = 'yellow',
    Pink = 'pink',
    SkyBlue = 'sky-blue',
    Green = 'green',
    Red = 'red',
    Black = 'black',
    Slate = 'slate',
    Turquoise = 'turquoise'
}

