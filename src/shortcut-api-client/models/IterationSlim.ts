/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IterationAssociatedGroup } from '../models/IterationAssociatedGroup';
import { IterationStats } from '../models/IterationStats';
import { Label } from '../models/Label';
import { HttpFile } from '../http/http';

/**
* IterationSlim represents the same resource as an Iteration, but is more light-weight. Use the [Get Iteration](#Get-Iteration) endpoint to fetch the unabridged payload for an Iteration. 
*/
export class IterationSlim {
    /**
    * The Shortcut application url for the Iteration.
    */
    'appUrl': string;
    /**
    * A string description of this resource
    */
    'entityType': string;
    /**
    * An array of labels attached to the iteration.
    */
    'labels': Array<Label>;
    /**
    * `Deprecated:` use `member_mention_ids`.
    */
    'mentionIds': Array<string>;
    /**
    * An array of Member IDs that have been mentioned in the Story description.
    */
    'memberMentionIds': Array<string>;
    /**
    * An array containing Group IDs and Group-owned story counts for the Iteration\'s associated groups.
    */
    'associatedGroups': Array<IterationAssociatedGroup>;
    /**
    * The name of the iteration.
    */
    'name': string;
    'globalId': string;
    /**
    * An array of label ids attached to the iteration.
    */
    'labelIds': Array<number>;
    /**
    * The instant when this iteration was last updated.
    */
    'updatedAt': Date;
    /**
    * An array of Group IDs that have been mentioned in the Story description.
    */
    'groupMentionIds': Array<string>;
    /**
    * The date this iteration ends.
    */
    'endDate': Date;
    /**
    * An array of UUIDs for any Members listed as Followers.
    */
    'followerIds': Array<string>;
    /**
    * An array of UUIDs for any Groups you want to add as Followers. Currently, only one Group association is presented in our web UI.
    */
    'groupIds': Array<string>;
    /**
    * The date this iteration begins.
    */
    'startDate': Date;
    /**
    * The status of the iteration. Values are either \"unstarted\", \"started\", or \"done\".
    */
    'status': string;
    /**
    * The ID of the iteration.
    */
    'id': number;
    'stats': IterationStats;
    /**
    * The instant when this iteration was created.
    */
    'createdAt': Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "appUrl",
            "baseName": "app_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "labels",
            "baseName": "labels",
            "type": "Array<Label>",
            "format": ""
        },
        {
            "name": "mentionIds",
            "baseName": "mention_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "memberMentionIds",
            "baseName": "member_mention_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "associatedGroups",
            "baseName": "associated_groups",
            "type": "Array<IterationAssociatedGroup>",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "globalId",
            "baseName": "global_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "labelIds",
            "baseName": "label_ids",
            "type": "Array<number>",
            "format": "int64"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "groupMentionIds",
            "baseName": "group_mention_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "endDate",
            "baseName": "end_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "followerIds",
            "baseName": "follower_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "groupIds",
            "baseName": "group_ids",
            "type": "Array<string>",
            "format": "uuid"
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "stats",
            "baseName": "stats",
            "type": "IterationStats",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return IterationSlim.attributeTypeMap;
    }

    public constructor() {
    }
}
