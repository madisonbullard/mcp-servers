/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class UpdateCustomFieldEnumValue {
    /**
    * The unique ID of an existing EnumValue within the CustomField\'s domain.
    */
    'id'?: string;
    /**
    * A string value within the domain of this Custom Field.
    */
    'value'?: string;
    /**
    * A color key associated with this EnumValue within the CustomField\'s domain.
    */
    'colorKey'?: string | null;
    /**
    * Whether this EnumValue is enabled for its CustomField or not. Leaving this key out of the request leaves the current enabled state untouched.
    */
    'enabled'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string",
            "format": ""
        },
        {
            "name": "colorKey",
            "baseName": "color_key",
            "type": "string",
            "format": ""
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UpdateCustomFieldEnumValue.attributeTypeMap;
    }

    public constructor() {
    }
}
