/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* A reference to a Story.
*/
export class HistoryReferenceStory {
    /**
    * The ID of the entity referenced.
    */
    'id': any;
    /**
    * The type of entity referenced.
    */
    'entityType': string;
    /**
    * The application URL of the Story.
    */
    'appUrl': string;
    /**
    * The name of the entity referenced.
    */
    'name': string;
    /**
    * If the referenced entity is a Story, either \"bug\", \"chore\", or \"feature\".
    */
    'storyType': HistoryReferenceStoryStoryTypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "any",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "appUrl",
            "baseName": "app_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "storyType",
            "baseName": "story_type",
            "type": "HistoryReferenceStoryStoryTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return HistoryReferenceStory.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum HistoryReferenceStoryStoryTypeEnum {
    Feature = 'feature',
    Chore = 'chore',
    Bug = 'bug'
}

