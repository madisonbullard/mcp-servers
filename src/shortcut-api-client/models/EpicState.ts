/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Epic State is any of the at least 3 columns. Epic States correspond to one of 3 types: Unstarted, Started, or Done.
*/
export class EpicState {
    /**
    * The description of what sort of Epics belong in that Epic State.
    */
    'description': string;
    /**
    * A string description of this resource.
    */
    'entityType': string;
    /**
    * The hex color for this Epic State.
    */
    'color'?: string;
    /**
    * The Epic State\'s name.
    */
    'name': string;
    'globalId': string;
    /**
    * The type of Epic State (Unstarted, Started, or Done)
    */
    'type': string;
    /**
    * When the Epic State was last updated.
    */
    'updatedAt': Date;
    /**
    * The unique ID of the Epic State.
    */
    'id': number;
    /**
    * The position that the Epic State is in, starting with 0 at the left.
    */
    'position': number;
    /**
    * The time/date the Epic State was created.
    */
    'createdAt': Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "color",
            "baseName": "color",
            "type": "string",
            "format": "css-color"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "globalId",
            "baseName": "global_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return EpicState.attributeTypeMap;
    }

    public constructor() {
    }
}
