/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* A history item is a group of actions that represent a transactional change to a Story.
*/
export class History {
    /**
    * The date when the change occurred.
    */
    'changedAt': string;
    /**
    * The ID of the primary entity that has changed, if applicable.
    */
    'primaryId'?: any;
    /**
    * An array of objects affected by the change. Reference objects provide basic information for the entities reference in the history actions. Some have specific fields, but they always contain an id, entity_type, and a name.
    */
    'references'?: Array<any>;
    /**
    * An array of actions that were performed for the change.
    */
    'actions': Array<any>;
    /**
    * The ID of the member who performed the change.
    */
    'memberId'?: string;
    /**
    * The ID of the webhook that handled the change.
    */
    'externalId'?: string;
    /**
    * The ID representing the change for the story.
    */
    'id': string;
    /**
    * The version of the change format.
    */
    'version': HistoryVersionEnum;
    /**
    * The ID of the webhook that handled the change.
    */
    'webhookId'?: string | null;
    /**
    * The ID of the automation that performed the change.
    */
    'automationId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "changedAt",
            "baseName": "changed_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "primaryId",
            "baseName": "primary_id",
            "type": "any",
            "format": ""
        },
        {
            "name": "references",
            "baseName": "references",
            "type": "Array<any>",
            "format": ""
        },
        {
            "name": "actions",
            "baseName": "actions",
            "type": "Array<any>",
            "format": ""
        },
        {
            "name": "memberId",
            "baseName": "member_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "externalId",
            "baseName": "external_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "HistoryVersionEnum",
            "format": ""
        },
        {
            "name": "webhookId",
            "baseName": "webhook_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "automationId",
            "baseName": "automation_id",
            "type": "string",
            "format": "uuid"
        }    ];

    static getAttributeTypeMap() {
        return History.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum HistoryVersionEnum {
    V1 = 'v1'
}

