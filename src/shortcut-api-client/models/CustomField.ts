/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CustomFieldEnumValue } from '../models/CustomFieldEnumValue';
import { HttpFile } from '../http/http';

export class CustomField {
    /**
    * A string description of the CustomField
    */
    'description'?: string;
    /**
    * A string that represents the icon that corresponds to this custom field.
    */
    'iconSetIdentifier'?: string;
    /**
    * A string description of this resource.
    */
    'entityType': CustomFieldEntityTypeEnum;
    /**
    * The types of stories this CustomField is scoped to.
    */
    'storyTypes'?: Array<string>;
    /**
    * The name of the Custom Field.
    */
    'name': string;
    /**
    * When true, the CustomFieldEnumValues may not be reordered.
    */
    'fixedPosition'?: boolean;
    /**
    * The instant when this CustomField was last updated.
    */
    'updatedAt': Date;
    /**
    * The unique public ID for the CustomField.
    */
    'id': string;
    /**
    * A collection of legal values for a CustomField.
    */
    'values'?: Array<CustomFieldEnumValue>;
    /**
    * The type of Custom Field, eg. \'enum\'.
    */
    'fieldType': CustomFieldFieldTypeEnum;
    /**
    * An integer indicating the position of this Custom Field with respect to the other CustomField
    */
    'position': number;
    /**
    * The canonical name for a Shortcut-defined field.
    */
    'canonicalName'?: string;
    /**
    * When true, the CustomField can be applied to entities in the Workspace.
    */
    'enabled': boolean;
    /**
    * The instant when this CustomField was created.
    */
    'createdAt': Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "iconSetIdentifier",
            "baseName": "icon_set_identifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entity_type",
            "type": "CustomFieldEntityTypeEnum",
            "format": ""
        },
        {
            "name": "storyTypes",
            "baseName": "story_types",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "fixedPosition",
            "baseName": "fixed_position",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "values",
            "baseName": "values",
            "type": "Array<CustomFieldEnumValue>",
            "format": ""
        },
        {
            "name": "fieldType",
            "baseName": "field_type",
            "type": "CustomFieldFieldTypeEnum",
            "format": ""
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "canonicalName",
            "baseName": "canonical_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return CustomField.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum CustomFieldEntityTypeEnum {
    CustomField = 'custom-field'
}
export enum CustomFieldFieldTypeEnum {
    Enum = 'enum'
}

