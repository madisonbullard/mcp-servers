/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class CreateGroup {
    /**
    * The description of the Group.
    */
    'description'?: string;
    /**
    * The Member ids to add to this Group.
    */
    'memberIds'?: Set<string>;
    /**
    * The Workflow ids to add to the Group.
    */
    'workflowIds'?: Array<number>;
    /**
    * The name of this Group.
    */
    'name': string;
    /**
    * The mention name of this Group.
    */
    'mentionName': string;
    /**
    * The color you wish to use for the Group in the system.
    */
    'color'?: string;
    /**
    * The color key you wish to use for the Group in the system.
    */
    'colorKey'?: CreateGroupColorKeyEnum;
    /**
    * The Icon id for the avatar of this Group.
    */
    'displayIconId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "memberIds",
            "baseName": "member_ids",
            "type": "Set<string>",
            "format": "uuid"
        },
        {
            "name": "workflowIds",
            "baseName": "workflow_ids",
            "type": "Array<number>",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "mentionName",
            "baseName": "mention_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "color",
            "baseName": "color",
            "type": "string",
            "format": "css-color"
        },
        {
            "name": "colorKey",
            "baseName": "color_key",
            "type": "CreateGroupColorKeyEnum",
            "format": ""
        },
        {
            "name": "displayIconId",
            "baseName": "display_icon_id",
            "type": "string",
            "format": "uuid"
        }    ];

    static getAttributeTypeMap() {
        return CreateGroup.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum CreateGroupColorKeyEnum {
    Blue = 'blue',
    Purple = 'purple',
    MidnightBlue = 'midnight-blue',
    Orange = 'orange',
    YellowGreen = 'yellow-green',
    Brass = 'brass',
    Gray = 'gray',
    Fuchsia = 'fuchsia',
    Yellow = 'yellow',
    Pink = 'pink',
    SkyBlue = 'sky-blue',
    Green = 'green',
    Red = 'red',
    Black = 'black',
    Slate = 'slate',
    Turquoise = 'turquoise'
}

