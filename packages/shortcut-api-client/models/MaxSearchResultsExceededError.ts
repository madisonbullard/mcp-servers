/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Error returned when total maximum supported results have been reached.
*/
export class MaxSearchResultsExceededError {
    /**
    * The name for this type of error, `maximum-results-exceeded`
    */
    'error': MaxSearchResultsExceededErrorErrorEnum;
    /**
    * An explanatory message: \"A maximum of 1000 search results are supported.\"
    */
    'message': string;
    /**
    * The maximum number of search results supported, `1000`
    */
    'maximumResults': MaxSearchResultsExceededErrorMaximumResultsEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "error",
            "baseName": "error",
            "type": "MaxSearchResultsExceededErrorErrorEnum",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "maximumResults",
            "baseName": "maximum-results",
            "type": "MaxSearchResultsExceededErrorMaximumResultsEnum",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return MaxSearchResultsExceededError.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum MaxSearchResultsExceededErrorErrorEnum {
    MaximumResultsExceeded = 'maximum-results-exceeded'
}
export enum MaxSearchResultsExceededErrorMaximumResultsEnum {
    NUMBER_1000 = 1000
}

