/**
 * Shortcut API
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { UpdateCustomFieldEnumValue } from '../models/UpdateCustomFieldEnumValue';
import { HttpFile } from '../http/http';

export class UpdateCustomField {
    /**
    * Indicates whether the Field is enabled for the Workspace. Only enabled fields can be applied to Stories.
    */
    'enabled'?: boolean;
    /**
    * A collection of objects representing reporting periods for years.
    */
    'name'?: string;
    /**
    * A collection of EnumValue objects representing the values in the domain of some Custom Field.
    */
    'values'?: Array<UpdateCustomFieldEnumValue>;
    /**
    * A frontend-controlled string that represents the icon for this custom field.
    */
    'iconSetIdentifier'?: string;
    /**
    * A description of the purpose of this field.
    */
    'description'?: string;
    /**
    * The ID of the CustomField we want to move this CustomField before.
    */
    'beforeId'?: string;
    /**
    * The ID of the CustomField we want to move this CustomField after.
    */
    'afterId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "values",
            "baseName": "values",
            "type": "Array<UpdateCustomFieldEnumValue>",
            "format": ""
        },
        {
            "name": "iconSetIdentifier",
            "baseName": "icon_set_identifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "beforeId",
            "baseName": "before_id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "afterId",
            "baseName": "after_id",
            "type": "string",
            "format": "uuid"
        }    ];

    static getAttributeTypeMap() {
        return UpdateCustomField.attributeTypeMap;
    }

    public constructor() {
    }
}
